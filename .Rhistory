"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
colnames (Sfa_CBas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
colnames (Sfa_Bas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
HighConfidenceVariants <- function (SnpsInput) {
#Used to call high confidence (90%) variants in .snps files
#Determines number of total samples to implement a filter based on 90% of sample population
SampleCounts.df <- data.frame (table (SnpsInput$SampleName))
TotalSamples <- nrow (SampleCounts.df)
Filter <- TotalSamples*0.90
#Counts the number of times a position appears in the dataset
Counts.df <- data.frame (table (SnpsInput$P1))
#Filters Counts.df to show only variant positions in 90% of sample population
Pos.filtered <- as_tibble (
Counts.df$Var1[(which (
Counts.df$Freq >= Filter))])
return (Pos.filtered)
}
#Calling high confidence variants in Sfa_ABas and Sfa_CBas files
Sfa_ABas.Filtered <- HighConfidenceVariants (Sfa_ABas.snps)
Sfa_CBas.Filtered <- HighConfidenceVariants (Sfa_CBas.snps)
print (Sfa_ABas.Filtered)
print (Sfa_CBas.Filtered)
ABas <- data.frame (Sfa_ABas.Filtered)
CBas <- data.frame (Sfa_CBas.Filtered)
Unique.ABas <- data.frame (setdiff (ABas$value, CBas$value))
Unique.CBas <- data.frame (setdiff (CBas$value, ABas$value))
View(ABas)
View(Sfa_ABas.snps)
View(ABas)
View(Sfa_ABas.Filtered)
View(Unique.ABas)
View(Sfa_Bas.snps)
#Multiple sequence alignment completed via Nucmer, using the MUMmer package/software
#Read file(s)
Sfa_ABas.snps <- read.table (file="/Users/snow4/Desktop/ATP6/Sfa_ABas_Query.fasta.filter.snps")
Sfa_CBas.snps <- read.table (file="/Users/snow4/Desktop/ATP6/Sfa_CBas_Query.fasta.filter.snps")
Sfa_Bas.snps <- read.table (file="/Users/snow4/Desktop/ATP6/Sfa_Bas_Query.fasta.snps")
#Change column names to better represent data/incorporate metadata
#https://mummer.sourceforge.net/manual/#snps review output format for more info
colnames (Sfa_ABas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
colnames (Sfa_CBas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
colnames (Sfa_Bas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
HighConfidenceVariants <- function (SnpsInput) {
#Used to call high confidence (90%) variants in .snps files
#Determines number of total samples to implement a filter based on 90% of sample population
SampleCounts.df <- data.frame (table (SnpsInput$SampleName))
TotalSamples <- nrow (SampleCounts.df)
Filter <- TotalSamples*0.90
#Counts the number of times a position appears in the dataset
Counts.df <- data.frame (table (SnpsInput$P1))
#Filters Counts.df to show only variant positions in 90% of sample population
Pos.filtered <- as_tibble (
Counts.df$Var1[(which (
Counts.df$Freq >= Filter))])
return (Pos.filtered)
}
#Calling high confidence variants in Sfa_ABas and Sfa_CBas files
Sfa_ABas.Filtered <- HighConfidenceVariants (Sfa_ABas.snps)
Sfa_CBas.Filtered <- HighConfidenceVariants (Sfa_CBas.snps)
print (Sfa_ABas.Filtered)
print (Sfa_CBas.Filtered)
ABas <- data.frame (Sfa_ABas.Filtered)
CBas <- data.frame (Sfa_CBas.Filtered)
Unique.ABas <- data.frame (setdiff (ABas$value, CBas$value))
Unique.CBas <- data.frame (setdiff (CBas$value, ABas$value))
View(ABas)
View(Sfa_ABas.Filtered)
#Ryan Snow
#mtDNA_Comparative_Analysis
#ATP6
library (dplyr)
library (devtools)
#library (magrittr)
library (GenomicRanges)
#library (knitr)
#library (ggplot2)
library (tidyr)
library (rmarkdown)
#library (rutilstimflutre)
#library (ggbio)
#library (IRanges)
#Multiple sequence alignment completed via Nucmer, using the MUMmer package/software
#Read file(s)
Sfa_ABas.snps <- read.table (file="/Users/snow4/Desktop/ATP6/Sfa_ABas_Query.fasta.snps")
Sfa_CBas.snps <- read.table (file="/Users/snow4/Desktop/ATP6/Sfa_CBas_Query.fasta.snps")
Sfa_Bas.snps <- read.table (file="/Users/snow4/Desktop/ATP6/Sfa_Bas_Query.fasta.snps")
#Change column names to better represent data/incorporate metadata
#https://mummer.sourceforge.net/manual/#snps review output format for more info
colnames (Sfa_ABas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
colnames (Sfa_CBas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
colnames (Sfa_Bas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
HighConfidenceVariants <- function (SnpsInput) {
#Used to call high confidence (90%) variants in .snps files
#Determines number of total samples to implement a filter based on 90% of sample population
SampleCounts.df <- data.frame (table (SnpsInput$SampleName))
TotalSamples <- nrow (SampleCounts.df)
Filter <- TotalSamples*0.90
#Counts the number of times a position appears in the dataset
Counts.df <- data.frame (table (SnpsInput$P1))
#Filters Counts.df to show only variant positions in 90% of sample population
Pos.filtered <- as_tibble (
Counts.df$Var1[(which (
Counts.df$Freq >= Filter))])
return (Pos.filtered)
}
#Calling high confidence variants in Sfa_ABas and Sfa_CBas files
Sfa_ABas.Filtered <- HighConfidenceVariants (Sfa_ABas.snps)
Sfa_CBas.Filtered <- HighConfidenceVariants (Sfa_CBas.snps)
print (Sfa_ABas.Filtered)
print (Sfa_CBas.Filtered)
ABas <- data.frame (Sfa_ABas.Filtered)
CBas <- data.frame (Sfa_CBas.Filtered)
Unique.ABas <- data.frame (setdiff (ABas$value, CBas$value))
Unique.CBas <- data.frame (setdiff (CBas$value, ABas$value))
View(ABas)
View(Sfa_ABas.Filtered)
View(Sfa_ABas.snps)
#Ryan Snow
#mtDNA_Comparative_Analysis
#ATP6
library (dplyr)
library (devtools)
#library (magrittr)
library (GenomicRanges)
#library (knitr)
#library (ggplot2)
library (tidyr)
library (rmarkdown)
#library (rutilstimflutre)
#library (ggbio)
#library (IRanges)
#Multiple sequence alignment completed via Nucmer, using the MUMmer package/software
#Read file(s)
Sfa_ABas.snps <- read.table (file="/Users/snow4/Desktop/ATP6/Sfa_ABas_Query.fasta.snps")
Sfa_CBas.snps <- read.table (file="/Users/snow4/Desktop/ATP6/Sfa_CBas_Query.fasta.snps")
Sfa_Bas.snps <- read.table (file="/Users/snow4/Desktop/ATP6/Sfa_Bas_Query.fasta.snps")
#Change column names to better represent data/incorporate metadata
#https://mummer.sourceforge.net/manual/#snps review output format for more info
colnames (Sfa_ABas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
colnames (Sfa_CBas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
colnames (Sfa_Bas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
HighConfidenceVariants <- function (SnpsInput) {
#Used to call high confidence (90%) variants in .snps files
#Determines number of total samples to implement a filter based on 90% of sample population
SampleCounts.df <- data.frame (table (SnpsInput$SampleName))
TotalSamples <- nrow (SampleCounts.df)
Filter <- TotalSamples*0.95
#Counts the number of times a position appears in the dataset
Counts.df <- data.frame (table (SnpsInput$P1))
#Filters Counts.df to show only variant positions in 90% of sample population
Pos.filtered <- as_tibble (
Counts.df$Var1[(which (
Counts.df$Freq >= Filter))])
return (Pos.filtered)
}
#Calling high confidence variants in Sfa_ABas and Sfa_CBas files
Sfa_ABas.Filtered <- HighConfidenceVariants (Sfa_ABas.snps)
Sfa_CBas.Filtered <- HighConfidenceVariants (Sfa_CBas.snps)
print (Sfa_ABas.Filtered)
print (Sfa_CBas.Filtered)
ABas <- data.frame (Sfa_ABas.Filtered)
CBas <- data.frame (Sfa_CBas.Filtered)
Unique.ABas <- data.frame (setdiff (ABas$value, CBas$value))
Unique.CBas <- data.frame (setdiff (CBas$value, ABas$value))
View(ABas)
#Ryan Snow
#mtDNA_Comparative_Analysis
#ATP6
library (dplyr)
library (devtools)
#library (magrittr)
library (GenomicRanges)
#library (knitr)
#library (ggplot2)
library (tidyr)
library (rmarkdown)
#library (rutilstimflutre)
#library (ggbio)
#library (IRanges)
#Multiple sequence alignment completed via Nucmer, using the MUMmer package/software
#Read file(s)
Sfa_ABas.snps <- read.table (file="/Users/snow4/Desktop/ATP6/Sfa_ABas_Query.fasta.snps")
Sfa_CBas.snps <- read.table (file="/Users/snow4/Desktop/ATP6/Sfa_CBas_Query.fasta.snps")
Sfa_Bas.snps <- read.table (file="/Users/snow4/Desktop/ATP6/Sfa_Bas_Query.fasta.snps")
#Change column names to better represent data/incorporate metadata
#https://mummer.sourceforge.net/manual/#snps review output format for more info
colnames (Sfa_ABas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
colnames (Sfa_CBas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
colnames (Sfa_Bas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
HighConfidenceVariants <- function (SnpsInput) {
#Used to call high confidence (90%) variants in .snps files
#Determines number of total samples to implement a filter based on 90% of sample population
SampleCounts.df <- data.frame (table (SnpsInput$SampleName))
TotalSamples <- nrow (SampleCounts.df)
Filter <- TotalSamples*0.90
#Counts the number of times a position appears in the dataset
Counts.df <- data.frame (table (SnpsInput$P1))
#Filters Counts.df to show only variant positions in 90% of sample population
Pos.filtered <- as_tibble (
Counts.df$Var1[(which (
Counts.df$Freq >= Filter))])
return (Pos.filtered)
}
#Calling high confidence variants in Sfa_ABas and Sfa_CBas files
Sfa_ABas.Filtered <- HighConfidenceVariants (Sfa_ABas.snps)
Sfa_CBas.Filtered <- HighConfidenceVariants (Sfa_CBas.snps)
print (Sfa_ABas.Filtered)
print (Sfa_CBas.Filtered)
ABas <- data.frame (Sfa_ABas.Filtered)
CBas <- data.frame (Sfa_CBas.Filtered)
Unique.ABas <- data.frame (setdiff (ABas$value, CBas$value))
Unique.CBas <- data.frame (setdiff (CBas$value, ABas$value))
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("genbankr")
library (genbankr)
install.packages("genbankr")
install.packages("genbankr")
install.packages("genbankr")
install.packages("genbankr")
library (dplyr)
library (devtools)
library (genbankr)
Ref_Anno <- readGenBank (file="/Users/snow4/Desktop/ATP6/ATP6.gb")
View(Ref_Anno)
RefDb <- makeTxDbFromGenBank (Ref_Anno)
tx <- transcripts(RefDb, columns = "gene_id")
View(tx)
cat
cat (file = Sfa_ABas.snps)
View(tx)
tx@ranges@width
#Ryan Snow
#mtDNA_Comparative_Analysis
library (dplyr)
library (devtools)
#library (magrittr)
library (GenomicRanges)
#library (knitr)
#library (ggplot2)
library (tidyr)
library (rmarkdown)
#library (rutilstimflutre)
#library (ggbio)
#library (IRanges)
#Multiple sequence alignment completed via Nucmer, using the MUMmer package/software
#Read file(s)
Sfa_ABas.snps <- read.table (file="/Users/snow4/Desktop/MUMmer/Sfa_ABas_Query.fasta.snps")
Sfa_CBas.snps <- read.table (file="/Users/snow4/Desktop/MUMmer/Sfa_CBas_Query.fasta.snps")
Sfa_Bas.snps <- read.table (file="/Users/snow4/Desktop/MUMmer/Sfa_Bas_Query.fasta.snps")
#Change column names to better represent data/incorporate metadata
#https://mummer.sourceforge.net/manual/#snps review output format for more info
colnames (Sfa_ABas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
colnames (Sfa_CBas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
colnames (Sfa_Bas.snps) <- c ("P1",
"SUB_Ref",
"SUB_Query",
"P2",
"BUFF",
"DIST",
"R",
"Q",
"LEN_R",
"LEN_Q",
"FRM_1",
"FRM_2",
"mtDNA_Rep",
"SampleName")
HighConfidenceVariants <- function (SnpsInput) {
#Used to call high confidence (90%) variants in .snps files
#Determines number of total samples to implement a filter based on 90% of sample population
SampleCounts.df <- data.frame (table (SnpsInput$SampleName))
TotalSamples <- nrow (SampleCounts.df)
Filter <- TotalSamples*0.90
#Counts the number of times a position appears in the dataset
Counts.df <- data.frame (table (SnpsInput$P1))
#Filters Counts.df to show only variant positions in 90% of sample population
Pos.filtered <- as_tibble (
Counts.df$Var1[(which (
Counts.df$Freq >= Filter))])
return (Pos.filtered)
}
#Calling high confidence variants in Sfa_ABas and Sfa_CBas files
Sfa_ABas.Filtered <- HighConfidenceVariants (Sfa_ABas.snps)
Sfa_CBas.Filtered <- HighConfidenceVariants (Sfa_CBas.snps)
print (Sfa_ABas.Filtered)
print (Sfa_CBas.Filtered)
ABas <- data.frame (Sfa_ABas.Filtered)
CBas <- data.frame (Sfa_CBas.Filtered)
Unique.ABas <- data.frame (setdiff (ABas$value, CBas$value))
Unique.CBas <- data.frame (setdiff (CBas$value, ABas$value))
View(Unique.ABas)
